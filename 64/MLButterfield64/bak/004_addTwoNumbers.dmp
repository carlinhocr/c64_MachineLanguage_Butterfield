00001  0000             ;ADD TWO NUMBERS
00002  0001             ;RUN WITH SYS 850
00003  0001             *=$033C
00004  033C  20 E1 FF              JSR $FFE1 ;GO TO CHECK IF RUN STOP WAS PRESSED
00005  033F  F0 10                 BEQ $0351 ;GO TO THE END (RTS) IF IT WAS PRESSED
00006  0341  20 E4 FF              JSR $FFE4 ;GO AND CHECK IF A KEY WAS PRESSED IT WILL STORED IN THE ACCUMULATOR
00007  0344  C9 30                 CMP #$30  ;SEE IF IT IS LESS THAN THE ASCII 0
00008  0346  90 F4                 BCC $033C ;LOOP TO CHECK RUN/STOP AGAIN
00009  0348  C9 3A                 CMP #$3A  ;COMRPAE IF ITIS GREAT THAN OR EQUAK  TO
00010  034A                        ;THE NEXT CHARACTER AFTER ASCII 9
00011  034A  B0 F0                 BCS $033C ;BRANCH IF IT IS GREATER THAN OR EQUAL
00012  034C                        ;IF WE ARE HERE WE HAVE AN ASCII CHARACTER BETWEEN 0 AND 9
00013  034C  20 D2 FF              JSR $FFD2 ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00014  034F  29 0F                 AND #$0F  ;TURN OFF THE 4 HIGH BITS IN THE ACCUMULATOR TO TRASNLATE FROM ASCII TO NUMBER
00015  0351  60                    RTS
00016  0352                        ;START PROGRAM SYS 850 HERE
00017  0352  20 3C 03              JSR $033C       ; GET FIRST NUMBER
00018  0355  8D C0 03              STA $03C0       ; STORE FIRST NUMBER IN MEMORY
00019  0358  A9 2B                 LDA #$2B        ; LOAD ASCII FOR SYMBOL + IN THE ACCUMULATOR
00020  035A  20 D2 FF              JSR $FFD2 ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00021  035D  20 3C 03              JSR $033C       ; GET SECOND NUMBER
00022  0360  AA                    TAX       ; STORE SECOND NUMBER IN REGISTER X
00023  0361  A9 3D                 LDA #$3D        ;LOAD ACII SYMBOL =
00024  0363  20 D2 FF              JSR $FFD2 ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00025  0366                        ;START ADDING NUMBERS
00026  0366  8A                    TXA             ;TRANSFER SECOND NUMBER FROM REGISTER X TO ACCUMULATOR
00027  0367  18                    CLC             ;CLEAR CARRY BIUT TO START ADDITION
00028  0368  6D C0 03              ADC $03C0       ;ADD FIRST NUMBER IN MEMORY TO ACCUMULATOR
00029  036B  AA                    TAX             ;STORE RESULT IN REGISTER X
00030  036C  E0 0A                 CPX #$A         ;COMPARE REGISTER XTO NUMBER A, TEN IN DECIMAL
00031  036E  90 09                 BCC $0379       ;BRANCH IF IT IS LESS TO PRINT ONLY ONE CHARACTER
00032  0370                        ;IF WE ARE HERE IT IS BIGGER THAN 9
00033  0370  A9 31                 LDA #$31        ;LOAD NUMBER 1 IN ASCII AS IT IS BIGGER THAN 9 BUT LESS THAN 18
00034  0372  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00035  0375  8A                    TXA             ;TRANSFER X TO ACCUMULATOR
00036  0376                        ;SUBSTRACT 10
00037  0376  38                    SEC             ;SET THE CARRY TO START SUBSTRACTION
00038  0377  E9 0A                 SBC #$A         ;SUBSTRACT 10
00039  0379                        ;HERE WE COME FROM THE BRANCH OF LESS THAN A (DECIMAL 10)
00040  0379  09 30                 ORA #$30        ;CONVERT ACCUMULATOR TO ASCII
00041  037B  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00042  037E  A9 0D                 LDA #$0D        ;LOAD THE RETURN CHARACTER
00043  0380  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00044  0383  60                    RTS             ;END SUBROUTINE
00045  0384                        
00046  0384             
00047  0384             
00048  0384             
00049  0384                        
00050  0384                        
00051  0384             

******* 0 Label(s) *******

******* 0 Unused label(s) *******

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

