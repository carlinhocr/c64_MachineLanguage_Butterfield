00001  0000             ;ADD TWO NUMBERS
00002  0001             ;RUN WITH SYS 850
00003  0001             *=$033C
00004  033C  20 E1 FF              JSR $FFE1 ;GO TO CHECK IF RUN STOP WAS PRESSED
00005  033F  F0 10                 BEQ $0351 ;GO TO THE END (RTS) IF IT WAS PRESSED
00006  0341  20 E4 FF              JSR $FFE4 ;GO AND CHECK IF A KEY WAS PRESSED IT WILL STORED IN THE ACCUMULATOR
00007  0344  C9 30                 CMP #$30  ;SEE IF IT IS LESS THAN THE ASCII 0
00008  0346  90 F4                 BCC $033C ;LOOP TO CHECK RUN/STOP AGAIN
00009  0348  C9 3A                 CMP #$3A  ;COMRPAE IF ITIS GREAT THAN OR EQUAK  TO
00010  034A                        ;THE NEXT CHARACTER AFTER ASCII 9
00011  034A  B0 F0                 BCS $033C ;BRANCH IF IT IS GREATER THAN OR EQUAL
00012  034C                        ;IF WE ARE HERE WE HAVE AN ASCII CHARACTER BETWEEN 0 AND 9
00013  034C  20 D2 FF              JSR $FFD2 ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00014  034F  29 0F                 AND #$0F  ;TURN OFF THE 4 HIGH BITS IN THE ACCUMULATOR TO TRASNLATE FROM ASCII TO NUMBER
00015  0351  60                    RTS
00016  0352             ;START PROGRAM SYS 850 HERE
00017  0352  20 3C 03              JSR $033C       ; GET FIRST NUMBER
00018  0355  8D C0 03              STA $03C0       ;STORE FIRST NUMBER IN MEMORY
00019  0358  A9 2D                 LDA #$2D        ; LOAD ASCII FOR SYMBOL - IN THE ACCUMULATOR
00020  035A  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00021  035D  20 3C 03              JSR $033C       ;GET SECOND NUMBER
00022  0360  8D C1 03              STA $03C1       ;STORE SECOND NUMBER IN MEMORY
00023  0363  A9 3D                 LDA #$3D        ;LOAD ACII SYMBOL =
00024  0365  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00025  0368             ;START SUBSTRACTING NUMBERS
00026  0368  AD C0 03              LDA $03C0       ;LOAD FIRST NUMBER IN MEMORY
00027  036B  38                    SEC             ;SET THE CARRY TO START SUBSTRACTION
00028  036C  ED C1 03              SBC $03C1       ;SUBSTRACT THE SECOND NUMBER FROM THE FIRST THAT IS IN THE ACCUMULATOR
00029  036F  8D C2 03              STA $03C2       ;STORE ACCUMULATOR RESULT
00030  0372  A8                    TAY             ;TRANSFER RESULT TO Y REGISTER
00031  0373             
00032  0373  C0 00                 CPY #$0         ;CHECK TO SEE IF IT IS NEGATIVE COMPARING WITH ZERO
00033  0375  B0 06                 BCS $037D       ;BRANCH IF IT IS POSITIVE (MORE OR EQUAL TO ZERO)
00034  0377             
00035  0377  A9 2D                 LDA #$2D        ;PRINT THE LESS SIGN
00036  0379  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00037  037C  98                    TYA             ;TRANFER RESULT BACK
00038  037D             ;RETURN HERE IT WAS GREATER THAN OR EQUAL TO CERO TO PRINT THE RESULT ON THE ACCUMULATOR
00039  037D  09 30                 ORA #$30        ;CONVERT ACCUMULATOR TO ASCII
00040  037F  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00041  0382  A9 0D                 LDA #$0D        ;LOAD THE RETURN CHARACTER
00042  0384  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00043  0387  60                    RTS             ;END SUBROUTINE
00044  0388             
00045  0388                        
00046  0388             
00047  0388             
00048  0388             
00049  0388                        
00050  0388                        
00051  0388             

******* 0 Label(s) *******

******* 0 Unused label(s) *******

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

