00001  0000             ;ADD TWO NUMBERS
00002  0001             ;RUN WITH SYS 850
00003  0001             *=$033C
00004  033C  20 E1 FF              JSR $FFE1 ;GO TO CHECK IF RUN STOP WAS PRESSED
00005  033F  F0 10                 BEQ $0351 ;GO TO THE END (RTS) IF IT WAS PRESSED
00006  0341  20 E4 FF              JSR $FFE4 ;GO AND CHECK IF A KEY WAS PRESSED IT WILL STORED IN THE ACCUMULATOR
00007  0344  C9 30                 CMP #$30  ;SEE IF IT IS LESS THAN THE ASCII 0
00008  0346  90 F4                 BCC $033C ;LOOP TO CHECK RUN/STOP AGAIN
00009  0348  C9 3A                 CMP #$3A  ;COMRPAE IF ITIS GREAT THAN OR EQUAK  TO
00010  034A                        ;THE NEXT CHARACTER AFTER ASCII 9
00011  034A  B0 F0                 BCS $033C ;BRANCH IF IT IS GREATER THAN OR EQUAL
00012  034C                        ;IF WE ARE HERE WE HAVE AN ASCII CHARACTER BETWEEN 0 AND 9
00013  034C  20 D2 FF              JSR $FFD2 ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00014  034F  29 0F                 AND #$0F  ;TURN OFF THE 4 HIGH BITS IN THE ACCUMULATOR TO TRASNLATE FROM ASCII TO NUMBER
00015  0351  60                    RTS
00016  0352             ;START PROGRAM SYS 850 HERE
00017  0352  20 3C 03              JSR $033C       ; GET FIRST NUMBER
00018  0355  AA                    TAX             ; STORE FIRST NUMBER IN REGISTER X
00019  0356  8D C0 03              STA $03C0       ;STORE FIRST NUMBER IN MEMORY
00020  0359  A9 2D                 LDA #$2D        ; LOAD ASCII FOR SYMBOL - IN THE ACCUMULATOR
00021  035B  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00022  035E  20 3C 03              JSR $033C       ;GET SECOND NUMBER
00023  0361  8D C1 03              STA $03C1       ;STORE SECOND NUMBER IN MEMORY
00024  0364  A8                    TAY             ;STORE SECOND NUMBER IN Y REGISTER
00025  0365  A9 3D                 LDA #$3D        ;LOAD ACII SYMBOL =
00026  0367  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00027  036A             ;START SUBSTRACTING NUMBERS
00028  036A  AD C0 03              LDA $03C0       ;TRANSFER FIRST NUMBER FROM REGISTER X TO ACCUMULATOR
00029  036D  38                    SEC             ;SET THE CARRY TO START SUBSTRACTION
00030  036E  ED C1 03              SBC $03C1       ;SUBSTRACT THE SECOND NUMBER FROM THE FIRST THAT IS IN THE ACCUMULATOR
00031  0371                        
00032  0371  10 0C                 BPL POSITIVE
00033  0373  A9 2D                 LDA #$2D        ;PRINT THE LESS SIGN
00034  0375  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00035  0378  AD C1 03              LDA $03C1
00036  037B  38                    SEC
00037  037C  ED C0 03              SBC $03C0       ;SUBSTRACT FIRST SO GREATER NUMBER
00038  037F                        
00039  037F             POSITIVE
00040  037F             ;RETURN HERE IT WAS GREATER THAN OR EQUAL TO CERO TO PRINT THE RESULT ON THE ACCUMULATOR
00041  037F  09 30                 ORA #$30        ;CONVERT ACCUMULATOR TO ASCII
00042  0381  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00043  0384  A9 0D                 LDA #$0D        ;LOAD THE RETURN CHARACTER
00044  0386  20 D2 FF              JSR $FFD2       ;PRINT THE CHRACTER THAT IS IN THE ACCUMULATOR REGISTER A
00045  0389  60                    RTS             ;END SUBROUTINE
00046  038A             
00047  038A             
00048  038A             
00049  038A                        
00050  038A                        
00051  038A             
00052  038A             
00053  038A             
00054  038A                        
00055  038A                        
00056  038A             

******* 1 Label(s) *******
POSITIVE = $037F 

******* 1 Unused label(s) *******
POSITIVE

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

