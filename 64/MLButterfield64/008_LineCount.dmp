00001  0000             ;A COUNT, COUNT HOW MANY RETURNS OR 0D ARE THERE IN A SEQUENTIAL FILE
00002  0001             ;EQUIVALENT TO THE NUMBER OF LINES
00003  0001             *=$0A00    
00004  0A00  A9 00                 LDA #$00 ;INITIALIZE THE  COUNT
00005  0A02  8D FF 0A              STA $0AFF ;STORE THE COUNT IN THIS MEMORY ADDRESS FOR LETTER A
00006  0A05  A2 01                 LDX #$01 ;LOAD 1 AS LOGICAL FILE 1 ON REGISTER X
00007  0A07  20 C6 FF              JSR $FFC6 ;SWITCHES THE INPUT PATH (USED BY GET, $FFE4) TO THE LOGICAL FILE SPECIFIED AT REGISTER X
00008  0A0A             
00009  0A0A             STARTREADING 
00010  0A0A                        ;INPUT IS CONNECTED TO LOGICAL FILE 1
00011  0A0A                        ;LOAD THE INFORMATION
00012  0A0A  20 E4 FF              JSR $FFE4 ;LOAD ONE CHARACTER TO THE A REGISTER
00013  0A0D                        ;CHECK ST AND PUSH THE VALUE IN THE STACK FOR THE PINPUT DEVICE
00014  0A0D  A6 90                 LDX $90
00015  0A0F  08                    PHP ;SAVE THE PROCESOR STATUS REGISTER
00016  0A10  C9 0D                 CMP #$0D ;COMPARE THE CHARACTER ON THE ACCUMULATOR WITH "<RETURN> $0D
00017  0A12  D0 03                 BNE KEEPGOING
00018  0A14  EE FF 0A              INC $0AFF
00019  0A17                        
00020  0A17             KEEPGOING
00021  0A17                        ;NOW LETS GET THE ST FLAGS FROM THE INPUT DEVICES STASHED AT THE STACK
00022  0A17  28                    PLP
00023  0A18                        ;IF Z FLAG IS ZERO LETS GET ANOTHER CHARACTER IF NOT END
00024  0A18  F0 F0                 BEQ STARTREADING
00025  0A1A  20 CC FF              JSR $FFCC ;DISCONNECT INPUT SOURCE AND THIS DESTROYS THE A REGISTER CONTENT
00026  0A1D  60                    RTS
00027  0A1E             

******* 2 Label(s) *******
keepgoing = $0A17 
startreading = $0A0A 

******* 0 Unused label(s) *******

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

